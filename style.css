/* ?引入字体 网址就是html中引入的link中的网址 */
/* !必须引入这个，因为content:'\f00d'这种要用到这个字体，否则出现不了图标的 */
@import url("https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css");

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    min-height: 100vh;
    width: 100%;
    background: #000000;
    display: flex;
    justify-content: center;
    align-items: center;
}
.navigation{
    /* 元素将相对于屏幕视口的位置来指定其位置。并且元素的位置在屏幕滚动时不会改变 */
    position: fixed;
    top: 0;
    left: 0;
    width: 60px;
    height: 100%;
    background: #3a3374;
    overflow: hidden;
    transition-timing-function: 0.5s;
}
/*  !position  与  display:flex 不能同时加给一个div，否则会导致失效，但是把position给外层div定位，内部继续用 display:flex则没有影响 */
/*  !同理，反之亦然，先在外层div用display:flex上下左右居中，内部的个别元素在用position绝对定位/相对定位/固定定位都行 */
.leftbox{
    display: flex;
  justify-content: center;
  width: 100%;
    height: 100%;
}
/* 侧边菜单栏展开的宽度 */
.navigation:hover,
.navigation.active{
    width: 150px;  
}

/* 设置navigation内部的ul的绝对定位 */
.navigation ul{
    /* position: absolute; */
    /* 可以不写top:0 left:0，因为是默认的位置 */
    /* top: 0;
    left: 0; */
   
    width: 100%;
    /* border: 1px solid red; */
}
.navigation ul li{
    position: relative;
    width: 100%;
    height: 50px;
    margin: 10px 0px;
    /* 取消li的小圆点样式 */
    list-style: none;
    /* border: 1px solid blue; */
}

.navigation ul li a:hover{
    background: #6712c9;
}

.navigation ul li a{
    /* position: absolute; */
    width: 100%;
    height: 100%;
    /* 居中a标签内的图标和文字 */
    display: flex;
    align-items: center;
    color: #fff;

    /* text-decoration: none 标准的文本 默认的  */
    /*  text-decoration:blink 闪烁文本*/
    /* !IE、Chrome 或 Safari 不支持 "blink" 属性值 */
    text-decoration: none;
}

.navigation ul li a .icon{
    position: relative;
    display: block;
    /* 图标最小宽度与收缩状态的边栏一样宽，刚好可以展示图标 */
    min-width: 60px;
    /* 居中图标 */
    text-align: center;
}
.navigation ul li a .icon .fa{
    font-size: 30px;
}
.navigation ul li a .title{
    position: relative;
    padding: 0 10px;
    text-align: center;
    /* 文本不会换行，文本会在在同一行上继续，直到遇到 <br> 标签为止 */
    /* 防止菜单标题过长因为宽度不够自动换行 */
    white-space: nowrap; 
    line-height: 25px;

}

/* 右侧的菜单图标点击按钮 */
/* absolute:0 left:0  也可以自己进行设置*/
.toggle{
    position: absolute;
    top: 0;
    right: 0;
    
    width: 60px;
    height: 60px;
    background: #8e4eac;
    cursor: pointer;
}
.toggle.active2{
    background: #6712c9;
}
.toggle:before{
    content: '\f2ba';
    /* 必须引入fontAwesome 否则图标无法通过content: '\f2ba' 显现 */
    font-family: fontAwesome;

    width: 100%;
    height: 100%;

    /* !可以用这两行替换display: flex那三行，一样是上下左右居中 */
    /* 但是要注意，line-height：60px是跟设置的高度一样的，否则会偏上或偏下，没有display灵活 */
    /* line-height: 60px;
    text-align: center; */

    
    display: flex;
    align-items: center;
    justify-content: center;
    
    font-size: 24px;
    color: #fff;
}
.toggle.active2:before{
    content: '\f00d';
}



.wrapper{
    /* 因为页面有些元素不是通过display:flex进行居中的,所以这里无法通过body进行上下左右居中,只好用绝对定位了 */
    /* 通过position: absolute 方可使用  transform: translate(-50%,-50%) 来进行上下左右的居中*/
    /* !使用绝对定位，在响应式中会有问题，位置不能永远居中了，还是 display: flex; 好些 */
    /* position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%); */
    
    display: flex;
    justify-content: center;
    align-items: center;
    
}
.center{
  
    color: white;
    font-size: 30px;

    /* 字间距设置 */
    letter-spacing:20px;
    /* !因为letter-spacing 字间距设置为40px，最右侧会有个40px的距离 */
    /* !所以通过padding-left 将整体向有移动回去40px，这样就居中了 */
    padding-left: 20px;
    /* 字体设置 */
    font-family: cursive;
}


/* ?响应式操作 */
/* 当低于这个宽度时，进行修改 */
@media(max-width:767px){
    .navigation{
        left: -60px;
    }
    .navigation.active{
        left:0px;
        width: 100%;
    }
    .center{
    font-size: 25px;
    
    /* width: 50px; */
    word-wrap: break-word;
    width: 50px;  
    /* 因为会继承原来的属性，会有个字体距离左边距20px的效果，所以用居中方法居中 */
    display: flex;
    justify-content: center;
    align-items: center;
    
    }
}